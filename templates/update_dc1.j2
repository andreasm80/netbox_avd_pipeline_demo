---
mgmt_interface: Management0
mgmt_interface_description: oob_management

spine:
  defaults:
    platform: cEOS-lab
    loopback_ipv4_pool: 10.255.0.0/27
    bgp_as: 65100
  nodes:
{%- for host in inventory_data.all.children.ANDREAS_FABRIC.children.DC1.children.DC1_SPINES.hosts | dict2items %}
  
    - name: {{ host.key }}
      id: {{ loop.index }}
      mgmt_ip: "{{ '{{ ansible_host }}/24' }}"
{%- endfor %}

l3leaf:
  defaults:
    platform: cEOS-lab
    loopback_ipv4_pool: 10.255.0.0/27
    loopback_ipv4_offset: 2
    vtep_loopback_ipv4_pool: 10.255.1.0/27
    uplink_interfaces: ['Ethernet1', 'Ethernet2']
    uplink_switches: ['andreas-dc1-spine1', 'andreas-dc1-spine2']
    uplink_ipv4_pool: 10.255.255.0/26
    mlag_peer_ipv4_pool: 10.255.1.64/27
    mlag_peer_l3_ipv4_pool: 10.255.1.96/27
    virtual_router_mac_address: 00:1c:73:00:00:99
    spanning_tree_priority: 4096
    spanning_tree_mode: mstp
  node_groups:
{%- set l3_leaves = inventory_data.all.children.ANDREAS_FABRIC.children.DC1.children.DC1_L3_LEAVES.hosts | dict2items -%}
{%- set leaf_groups = {} -%}
{%- for leaf in l3_leaves -%}
  {%- set leaf_name = leaf.key -%}
  {%- set group_num = leaf_name | regex_replace('^(andreas-dc1-leaf)(\\d+)([ab])$', '\\2') | int -%}
  {%- set group_name = 'DC1_L3_LEAF' ~ group_num -%}
  {%- if group_name not in leaf_groups -%}
    {%- do leaf_groups.update({group_name: {'nodes': [], 'bgp_as': 65100 + group_num}}) -%}
  {%- endif -%}
  {%- do leaf_groups[group_name].nodes.append({'name': leaf_name, 'ansible_host': leaf.value.ansible_host}) -%}
{%- endfor %}
{%- for group_name, group_data in leaf_groups.items() %}

    - group: {{ group_name }}
      bgp_as: {{ group_data.bgp_as }}
      nodes:
{%- set group_index = group_name | regex_replace('^DC1_L3_LEAF(\\d+)$', '\\1') | int -%}
{%- for node in group_data.nodes | sort(attribute='name') %}

        - name: {{ node.name }}
          id: {{ (group_index - 1) * 2 + loop.index }}
          mgmt_ip: "{{ '{{ ansible_host }}/24' }}"
          uplink_switch_interfaces:
            - Ethernet{{ (group_index - 1) * 2 + loop.index }}
            - Ethernet{{ (group_index - 1) * 2 + loop.index }}
{%- endfor %}
{%- endfor %}

l2leaf:
  defaults:
    platform: cEOS-lab
    spanning_tree_mode: mstp
  node_groups:
{%- set l2_leaves = inventory_data.all.children.ANDREAS_FABRIC.children.DC1.children.DC1_L2_LEAVES.hosts | dict2items -%}
{%- set l2_groups = {} -%}
{%- for leaf in l2_leaves -%}
  {%- set leaf_name = leaf.key -%}
  {%- set group_num = leaf_name | regex_replace('^(andreas-dc1-leaf)(\\d+)(c)$', '\\2') | int -%}
  {%- set group_name = 'DC1_L2_LEAF' ~ group_num -%}
  {%- if group_name not in l2_groups -%}
    {%- do l2_groups.update({group_name: {'nodes': [], 'uplink_switches': ['andreas-dc1-leaf' ~ group_num ~ 'a', 'andreas-dc1-leaf' ~ group_num ~ 'b']}}) -%}
  {%- endif -%}
  {%- do l2_groups[group_name].nodes.append({'name': leaf_name, 'ansible_host': leaf.value.ansible_host}) -%}
{%- endfor %}
{%- for group_name, group_data in l2_groups.items() %}

    - group: {{ group_name }}
      uplink_switches: {{ group_data.uplink_switches }}
      nodes:
{%- set group_index = group_name | regex_replace('^DC1_L2_LEAF(\\d+)$', '\\1') | int -%}
{%- for node in group_data.nodes %}

        - name: {{ node.name }}
          id: {{ group_index }}
          mgmt_ip: "{{ '{{ ansible_host }}/24' }}"
          uplink_switch_interfaces:
            - Ethernet6
            - Ethernet6
{%- endfor %}
{%- endfor %}

