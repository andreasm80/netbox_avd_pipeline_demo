name: 'CI Runner ansible deploy-cvp - in main'

on:
  push:
    branches:
      - 'main'
    paths:
      - 'group_vars/*'

jobs:

  run-avd-build_prod_push_cvaas:
    runs-on: ubuntu-latest
    container: 
      image: "registry.guzware.net/avd/avd-5.7:v2"

    outputs:
      vlan_id: ${{ steps.extract_vlan_id.outputs.vlan_id }}
      change_control_name: ${{ steps.deploy_cv.outputs.change_control_name }}

    steps:


      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          # Fetch more than just the last commit so we can search the history
          fetch-depth: 0


      - name: Build Prod Configurations and Documentation
        run: |
          . /workspace/ansible-venv/bin/activate
          ansible-playbook -i inventory.yml build.yml

      - name: 'Update NetBox Status to Created and Extract VLAN ID'
        id: extract_vlan_id # Give the step an ID to reference its output
        run: |
          echo "DEBUG: Searching for VLAN DB_ID in new commits between ${{ gitea.event.before }} and ${{ gitea.event.after }}"
          
          COMMIT_MESSAGES=$(git log ${{ gitea.event.before }}..${{ gitea.event.after }} --pretty=%B)
          
          VLAN_DB_ID=$(echo "$COMMIT_MESSAGES" | grep -oP '\(DB_ID: \K\d+(?=\))' | head -n 1)
          
          echo "vlan_id=$VLAN_DB_ID" >> $GITHUB_OUTPUT
          
          if [ -z "$VLAN_DB_ID" ]; then
            echo "No VLAN DB_ID found in the new commits. Skipping NetBox status update."
          else
            echo "Found VLAN DB_ID: $VLAN_DB_ID. Updating NetBox status to 'created'."
            python3 scripts/update_netbox_status.py $VLAN_DB_ID created
          fi
        env:
          NETBOX_URL: ${{ secrets.NETBOX_URL }}
          NETBOX_API_TOKEN: ${{ secrets.NETBOX_API_TOKEN }}
          NETBOX_CERT: 'certs/netbox_cert.pem'

      - name: Commit and Push Generated Files
        run: |
          # Make sure any generated files are added to Git
          if [ -d "documentation" ]; then
            git add documentation/
          fi

          if [ -d "intended" ]; then
            git add intended/
          fi

          if [ -d "reports" ]; then
            git add reports/
          fi

          git config user.name "gitea-runner"
          git config user.email "andreas.marqvardsen@gmail.com"
          # Get the current branch name dynamically
          CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          git commit -s -m "Update generated files from branch $CURRENT_BRANCH" || echo "No changes to commit"

          # Push changes to the current branch
          git push origin $CURRENT_BRANCH


      - name: Deploy changes to CloudVision and get Change Control Name
        id: deploy_cv
        run: |
          . /workspace/ansible-venv/bin/activate
          ANSIBLE_STDOUT_CALLBACK=default ansible-playbook -i inventory.yml avd_cv_workflow.yml > ansible-cv-output.txt
          cat ansible-cv-output.txt
          CC_NAME=$(grep "Change Control Name:" ansible-cv-output.txt | sed 's/.*Change Control Name: \(.*\) | ID:.*/\1/')
          
          if [[ -z "$CC_NAME" ]]; then
            echo "::error::Could not find 'Change Control Name' in the playbook output."
            exit 1
          fi
          
          echo "Found Change Control Name: $CC_NAME"
          # Set the output variable for the next job
          echo "change_control_name=$CC_NAME" >> $GITHUB_OUTPUT

          mkdir -p status
          # Write the Change Control Name to the file
          echo "$CC_NAME" > status/latest_cvaas_cc_job.name
          echo "Change Control Name written to status/latest_cvaas_cc_job.name"

      - name: Commit and Push CVAAS Status File
        run: |
          if [ -f "status/latest_cvaas_cc_job.name" ]; then
            git config user.name "gitea-runner"
            git config user.email "andreas.marqvardsen@gmail.com"
            git add status/latest_cvaas_cc_job.name
            git commit -s -m "Update CVAAS Change Control Job Name" || echo "No status file changes to commit"
 
            git pull --rebase origin main
             
            git push origin main
          else
            echo "Status file not found. Skipping commit."
          fi

  run-anta-validation:
    needs: run-avd-build_prod_push_cvaas
    runs-on: ubuntu-latest
    container:
      image: "registry.guzware.net/avd/avd-5.7:v2"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Sync with Remote Main Branch
        run: |
          git pull origin main
      
      - name: Wait for CloudVision Change Control Completion
        run: |
          . /workspace/ansible-venv/bin/activate
          python scripts/cv_monitor.py
        env:
          CVP_SERVER: 'URL' # Or use a Gitea secret: ${{ secrets.CVP_SERVER }}
          CVP_TOKEN: '' # Or use a Gitea secret: ${{ secrets.CVP_TOKEN }}
          CHANGE_CONTROL_NAME: ${{ needs.run-avd-build_prod_push_cvaas.outputs.change_control_name }}

      - name: 'Update NetBox Status to Applied'
        id: update_status_applied
        run: |
          VLAN_DB_ID=${{ needs.run-avd-build_prod_push_cvaas.outputs.vlan_id }}
          if [ -z "$VLAN_DB_ID" ]; then
            echo "No VLAN ID was passed from the previous job. Skipping NetBox status update."
          else
            echo "Found VLAN DB_ID: $VLAN_DB_ID. Updating NetBox status to 'applied'."
            python3 scripts/update_netbox_status.py $VLAN_DB_ID applied
          fi
        env:
          NETBOX_URL: ${{ secrets.NETBOX_URL }}
          NETBOX_API_TOKEN: ${{ secrets.NETBOX_API_TOKEN }}
          NETBOX_CERT: 'certs/netbox_cert.pem'

      - name: Run ANTA Validation Playbook
        run: |
          . /workspace/ansible-venv/bin/activate
          ansible-playbook -i inventory.yml anta.yml

      - name: Commit and Push ANTA Report and Test Catalogs
        run: |
          # The ANTA playbook created the files in the previous step.
          git config user.name "gitea-runner"
          git config user.email "andreas.marqvardsen@gmail.com"
          git add ./reports
          git add ./intended/test_catalogs
          git commit -s -m "Add ANTA reports and test catalogs from CI/CD pipeline" || echo "No changes to commit"

          # Now, pull the latest changes from remote main
          # This must be done AFTER the files are committed, otherwise it will fail.
          git pull --rebase origin main

          git push origin main

